name: Deploy to Dev Environment

on:
  push:
    branches: 
      - dev

env:
  REPO_URL: 357586184453.dkr.ecr.eu-west-1.amazonaws.com/identity-management-dev-backend
  ECR_REPOSITORY: identity-management-dev-backend
  AWS_REGION: eu-west-1
  CLUSTER: identity
  SERVICE: identity_management

  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_USERNAME }}
  DATABASE_DDL_FORMAT: ${{ secrets.DATABASE_DDL_FORMAT }}

jobs:
  test:
    name: Unit Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Maven Package
        run: mvn -B clean package -DskipTests

      - name: Maven Verify
        run: mvn -B clean verify

      - name: Maven Test
        env:
            DATABASE_URL: ${{ env.DATABASE_URL }}
            DATABASE_USERNAME: ${{ env.DATABASE_USERNAME }}
            DATABASE_PASSWORD: ${{ env.DATABASE_USERNAME }}
            DATABASE_DDL_FORMAT: ${{ env.DATABASE_DDL_FORMAT }}
            KEYCLOAK_INTROSPECTION_URI: ${{ secrets.KEYCLOAK_INTROSPECTION_URI }}
            KEYCLOAK_SERVER_URL: ${{ secrets.KEYCLOAK_SERVER_URL }}
            KEYCLOAK_CLIENT_ID: ${{ secrets.KEYCLOAK_CLIENT_ID }}
            CLIENT_ID:  ${{ secrets.CLIENT_ID }}
            KEYCLOAK_REALM: ${{ secrets.KEYCLOAK_REALM }}
            ADMIN_CLIENT_ID: ${{ secrets.ADMIN_CLIENT_ID }}
            KEYCLOAK_ADMIN_CLIENT_ID: ${{ secrets.KEYCLOAK_ADMIN_CLIENT_ID }}
            KEYCLOAK_MASTER_REALM: ${{ secrets.KEYCLOAK_MASTER_REALM }}
            KEYCLOAK_USERNAME: ${{ secrets.KEYCLOAK_USERNAME }}
            KEYCLOAK_PASSWORD: ${{ secrets.KEYCLOAK_PASSWORD }}
            KEYCLOAK_CLIENT_SECRET: ${{ secrets.KEYCLOAK_CLIENT_SECRET }}
            CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
            EUREKA_URL: ${{ secrets.EUREKA_URL }}
            PROFILE: local
            IDENTITY_SERVICE_APPLICATION_NAME: ${{ secrets.IDENTITY_SERVICE_APPLICATION_NAME }}

            QORE_ID_CLIENT_ID: ${{ secrets.QORE_ID_CLIENT_ID }}
            QORE_ID_CLIENT_SECRET: ${{ secrets.QORE_ID_CLIENT_SECRET }}
            QORE_ID_URL: ${{ secrets.QORE_ID_URL }}
            QORE_ID_TEST_NIN_NUMBER: ${{ secrets.QORE_ID_TEST_NIN_NUMBER }}
            QORE_ID_TEST_BVN_NUMBER: ${{ secrets.QORE_ID_TEST_BVN_NUMBER }}
            QORE_ID_TEST_RC_NUMBER: ${{ secrets.QORE_ID_TEST_RC_NUMBER }}


            PREMBLY_API_KEY: ${{ secrets.PREMBLY_API_KEY }}
            PREMBLY_APP_ID: ${{ secrets.PREMBLY_APP_ID }}
            PREMBLY_URL: ${{ secrets.PREMBLY_URL }}
            PREMBLY_ID_TEST_NIN_NUMBER: ${{ secrets.PREMBLY_ID_TEST_NIN_NUMBER }}
            PREMBLY_ID_TEST_BVN_NUMBER: ${{ secrets.PREMBLY_ID_TEST_BVN_NUMBER }}
            PREMBLY_ID_TEST_CAC_NUMBER: ${{ secrets.PREMBLY_ID_TEST_CAC_NUMBER }}
            
        run: mvn test

      - name: Maven Generate report
        run: mvn surefire-report:report

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:latest" >> $GITHUB_OUTPUT

      - name: Update ECS service
        run: |
          aws ecs update-service --cluster ${{ env.CLUSTER }} --service ${{ env.SERVICE }} --force-new-deployment
