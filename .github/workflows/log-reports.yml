name: Build and Deploy Report

on:
  push:
    branches: [ log-reports ]

env:
  REPO_URL: 357586184453.dkr.ecr.eu-west-1.amazonaws.com/identity-management-dev-backend
  ECR_REPOSITORY: identity-management-dev-backend
  ECR_REPOSITORY_SYSTEST: identity-management-systest
  AWS_REGION: eu-west-1
  CLUSTER: Gatekeeper
  SERVICE: identity-management
  SYSTEST_SERVICE: identity-management-systest

  DATABASE_URL: mongodb+srv://enumv2-db:PiD96zMcGQ51uglf@enumv2cluster.wzg2rjz.mongodb.net/
  DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
  MASTER_REALM_CLIENT_SECRET: ${{ secrets.MASTER_REALM_CLIENT_SECRET }}
  ADMIN_CLIENT_SECRET: ${{ secrets.ADMIN_CLIENT_SECRET }}


jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1  # Replace with your AWS region

    - name: Maven Package
      env:
            DATABASE_URL: ${{ env.DATABASE_URL }}
            DATABASE_NAME: ${{ env.DATABASE_NAME }}
            KEYCLOAK_INTROSPECTION_URI: ${{ secrets.KEYCLOAK_INTROSPECTION_URI }}
            KEYCLOAK_SERVER_URL: ${{ secrets.KEYCLOAK_SERVER_URL }}
            KEYCLOAK_CLIENT_ID: ${{ secrets.KEYCLOAK_CLIENT_ID }}
            CLIENT_ID:  ${{ secrets.CLIENT_ID }}
            KEYCLOAK_REALM: ${{ secrets.KEYCLOAK_REALM }}
            ADMIN_CLIENT_ID: ${{ secrets.ADMIN_CLIENT_ID }}
            KEYCLOAK_ADMIN_CLIENT_ID: ${{ secrets.KEYCLOAK_ADMIN_CLIENT_ID }}
            KEYCLOAK_MASTER_REALM: ${{ secrets.KEYCLOAK_MASTER_REALM }}
            KEYCLOAK_USERNAME: ${{ secrets.KEYCLOAK_USERNAME }}
            KEYCLOAK_PASSWORD: ${{ secrets.KEYCLOAK_PASSWORD }}
            KEYCLOAK_CLIENT_SECRET: ${{ secrets.KEYCLOAK_CLIENT_SECRET }}
            CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
            EUREKA_URL: ${{ secrets.EUREKA_URL }}
            PROFILE: ${{ secrets.PROFILE }}
            IDENTITY_SERVICE_APPLICATION_NAME: ${{ secrets.IDENTITY_SERVICE_APPLICATION_NAME }}
            MASTER_REALM_CLIENT_SECRET: ${{ env.MASTER_REALM_CLIENT_SECRET }}
            ADMIN_CLIENT_SECRET: ${{ env.ADMIN_CLIENT_SECRET }}
            SECOND_CLIENT_SECRET: ${{ secrets.SECOND_CLIENT_SECRET}}
            PORT: ${{ secrets.PORT }}

            QORE_ID_CLIENT_ID: ${{ secrets.QORE_ID_CLIENT_ID }}
            QORE_ID_CLIENT_SECRET: ${{ secrets.QORE_ID_CLIENT_SECRET }}
            QORE_ID_URL: ${{ secrets.QORE_ID_URL }}
            QORE_ID_TEST_NIN_NUMBER: ${{ secrets.QORE_ID_TEST_NIN_NUMBER }}
            QORE_ID_TEST_BVN_NUMBER: ${{ secrets.QORE_ID_TEST_BVN_NUMBER }}
            QORE_ID_TEST_RC_NUMBER: ${{ secrets.QORE_ID_TEST_RC_NUMBER }}


            PREMBLY_API_KEY: ${{ secrets.PREMBLY_API_KEY }}
            PREMBLY_APP_ID: ${{ secrets.PREMBLY_APP_ID }}
            PREMBLY_URL: ${{ secrets.PREMBLY_URL }}
            PREMBLY_ID_TEST_NIN_NUMBER: ${{ secrets.PREMBLY_ID_TEST_NIN_NUMBER }}
            PREMBLY_ID_TEST_BVN_NUMBER: ${{ secrets.PREMBLY_ID_TEST_BVN_NUMBER }}
            PREMBLY_ID_TEST_CAC_NUMBER: ${{ secrets.PREMBLY_ID_TEST_CAC_NUMBER }}
            EUREKA_INSTANCE_HOSTNAME: ${{ secrets.EUREKA_INSTANCE_HOSTNAME }}
            
      run: |
            mvn -B clean verify
            mvn site
            

    - name: Deploy to S3
      env:
        S3_BUCKET: semicolon-build-reports
        PROJECT_NAME: karrabo
      run: |
        # Move current "new" report to "old" folder
        #aws s3 sync s3://${S3_BUCKET}/${PROJECT_NAME}/new-reports s3://${S3_BUCKET}/${PROJECT_NAME}/old-reports --delete
        #aws s3 rm s3://${S3_BUCKET}/${PROJECT_NAME}/new-reports --recursive
        # Upload new Site reports
        aws s3 sync target/site s3://${S3_BUCKET}/${PROJECT_NAME}/new-reports


    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: site
        path: target/surefire-reports


  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
            DATABASE_URL: ${{ env.DATABASE_URL }}
            DATABASE_NAME: ${{ env.DATABASE_NAME }}
            KEYCLOAK_INTROSPECTION_URI: ${{ secrets.KEYCLOAK_INTROSPECTION_URI }}
            KEYCLOAK_SERVER_URL: ${{ secrets.KEYCLOAK_SERVER_URL }}
            KEYCLOAK_CLIENT_ID: ${{ secrets.KEYCLOAK_CLIENT_ID }}
            CLIENT_ID:  ${{ secrets.CLIENT_ID }}
            KEYCLOAK_REALM: ${{ secrets.KEYCLOAK_REALM }}
            ADMIN_CLIENT_ID: ${{ secrets.ADMIN_CLIENT_ID }}
            KEYCLOAK_ADMIN_CLIENT_ID: ${{ secrets.KEYCLOAK_ADMIN_CLIENT_ID }}
            KEYCLOAK_MASTER_REALM: ${{ secrets.KEYCLOAK_MASTER_REALM }}
            KEYCLOAK_USERNAME: ${{ secrets.KEYCLOAK_USERNAME }}
            KEYCLOAK_PASSWORD: ${{ secrets.KEYCLOAK_PASSWORD }}
            KEYCLOAK_CLIENT_SECRET: ${{ secrets.KEYCLOAK_CLIENT_SECRET }}
            CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
            EUREKA_URL: ${{ secrets.EUREKA_URL }}
            PROFILE: ${{ secrets.PROFILE }}
            IDENTITY_SERVICE_APPLICATION_NAME: ${{ secrets.IDENTITY_SERVICE_APPLICATION_NAME }}
            MASTER_REALM_CLIENT_SECRET: ${{ env.MASTER_REALM_CLIENT_SECRET }}
            ADMIN_CLIENT_SECRET: ${{ env.ADMIN_CLIENT_SECRET }}
            SECOND_CLIENT_SECRET: ${{ secrets.SECOND_CLIENT_SECRET}}
            PORT: ${{ secrets.PORT }}

            QORE_ID_CLIENT_ID: ${{ secrets.QORE_ID_CLIENT_ID }}
            QORE_ID_CLIENT_SECRET: ${{ secrets.QORE_ID_CLIENT_SECRET }}
            QORE_ID_URL: ${{ secrets.QORE_ID_URL }}
            QORE_ID_TEST_NIN_NUMBER: ${{ secrets.QORE_ID_TEST_NIN_NUMBER }}
            QORE_ID_TEST_BVN_NUMBER: ${{ secrets.QORE_ID_TEST_BVN_NUMBER }}
            QORE_ID_TEST_RC_NUMBER: ${{ secrets.QORE_ID_TEST_RC_NUMBER }}


            PREMBLY_API_KEY: ${{ secrets.PREMBLY_API_KEY }}
            PREMBLY_APP_ID: ${{ secrets.PREMBLY_APP_ID }}
            PREMBLY_URL: ${{ secrets.PREMBLY_URL }}
            PREMBLY_ID_TEST_NIN_NUMBER: ${{ secrets.PREMBLY_ID_TEST_NIN_NUMBER }}
            PREMBLY_ID_TEST_BVN_NUMBER: ${{ secrets.PREMBLY_ID_TEST_BVN_NUMBER }}
            PREMBLY_ID_TEST_CAC_NUMBER: ${{ secrets.PREMBLY_ID_TEST_CAC_NUMBER }}
            EUREKA_INSTANCE_HOSTNAME: ${{ secrets.EUREKA_INSTANCE_HOSTNAME }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Karrabo-Identity-Management -Dsonar.projectName='Karrabo-Identity-Management'
