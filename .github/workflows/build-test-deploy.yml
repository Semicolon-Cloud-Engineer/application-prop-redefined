name: Deploy to Dev Environment

on:
  push:
    branches: 
      - dev

env:
  EMAILS: 'joshua.o@semicolon.africa,martins@semicolon.africa,ibrahim@semicolon.africa'
  REPO_URL: 357586184453.dkr.ecr.eu-west-1.amazonaws.com/identity-management-dev-backend
  ECR_REPOSITORY: identity-management-dev-backend
  ECR_REPOSITORY_SYSTEST: identity-management-systest
  AWS_REGION: eu-west-1
  CLUSTER: Gatekeeper
  SERVICE: identity-management
  SYSTEST_SERVICE: identity-management-systest
  DATABASE_URL: mongodb+srv://enumv2-db:PiD96zMcGQ51uglf@enumv2cluster.wzg2rjz.mongodb.net/
  DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
  MASTER_REALM_CLIENT_SECRET: ${{ secrets.MASTER_REALM_CLIENT_SECRET }}
  ADMIN_CLIENT_SECRET: ${{ secrets.ADMIN_CLIENT_SECRET }}

jobs:

  build_and_analyze:
    name: Build and Analyze
    runs-on: ubuntu-latest
    outputs:
      sonarqube_url: ${{ steps.sonarqube.outputs.sonarqube_url }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Run build and analyze script
        run: |
          chmod +x .github/workflows/scripts/build_and_analyze.sh
          .github/workflows/scripts/build_and_analyze.sh
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DATABASE_URL: ${{ env.DATABASE_URL }}
          DATABASE_NAME: ${{ env.DATABASE_NAME }}
          MASTER_REALM_CLIENT_SECRET: ${{ env.MASTER_REALM_CLIENT_SECRET }}
          ADMIN_CLIENT_SECRET: ${{ env.ADMIN_CLIENT_SECRET }}

      - name: Get SonarQube URL
        id: sonarqube
        run: echo "::set-output name=sonarqube_url::http://sonarqube.enum.africa/dashboard?id=Karrabo-Identity-Management"

  deploy:
    name: Deploy to Dev
    needs: build_and_analyze
    runs-on: ubuntu-latest
    outputs:
      maven_report_url: ${{ steps.maven_report.outputs.maven_report_url }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Run deploy script
        run: |
          chmod +x .github/workflows/scripts/deploy.sh
          .github/workflows/scripts/deploy.sh
        env:
          S3_BUCKET: semicolon-build-reports
          PROJECT_NAME: karrabo/identity-management/maven-reports
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DATABASE_URL: ${{ env.DATABASE_URL }}
          DATABASE_NAME: ${{ env.DATABASE_NAME }}
          MASTER_REALM_CLIENT_SECRET: ${{ env.MASTER_REALM_CLIENT_SECRET }}
          ADMIN_CLIENT_SECRET: ${{ env.ADMIN_CLIENT_SECRET }}

      - name: Get Maven Report URL
        id: maven_report
        run: echo "::set-output name=maven_report_url::https://semicolon-build-reports.s3.eu-west-1.amazonaws.com/karrabo/identity-management/maven-reports/new-reports/index.html"

  run_tests:
    name: Run Automation Tests
    needs: deploy
    runs-on: ubuntu-latest
    outputs:
      automation_test_url: ${{ steps.automation_test.outputs.automation_test_url }}

    steps:
      - uses: actions/checkout@v3
      - name: Run tests script
        run: |
          chmod +x .github/workflows/scripts/run_tests.sh
          .github/workflows/scripts/run_tests.sh "${{ secrets.REPO_PAT }}"
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get Automation Test URL
        id: automation_test
        run: echo "::set-output name=automation_test_url::https://semicolon-build-reports.s3.eu-west-1.amazonaws.com/karrabo/identity-management/automation-tests-result/report-pytest-results.html"

  send_notification:
    name: Send Email Notification
    needs: [build_and_analyze, deploy, run_tests]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v3
      - name: Set environment variables
        run: |
          echo "TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
          echo "COMMIT_TITLE=$(git log -1 --pretty=%s)" >> $GITHUB_ENV
          echo "COMMIT_MESSAGE=$(git log -1 --pretty=%B)" >> $GITHUB_ENV
          echo "COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an <%ae>')" >> $GITHUB_ENV

      - name: Send build success email notification
        if: success()
        env:
          SMTP_SERVER: semicolon.africa
          SMTP_PORT: 465
          SMTP_USERNAME: builds@semicolon.africa
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          SONARQUBE_URL: ${{ needs.build_and_analyze.outputs.sonarqube_url }}
          MAVEN_REPORT_URL: ${{ needs.deploy.outputs.maven_report_url }}
          AUTOMATION_TEST_URL: ${{ needs.run_tests.outputs.automation_test_url }}
        run: |
          chmod +x .github/workflows/scripts/send_success_email.sh
          .github/workflows/scripts/send_success_email.sh \
            "$SONARQUBE_URL" \
            "$AUTOMATION_TEST_URL" \
            "$MAVEN_REPORT_URL" \
            "$SMTP_SERVER" \
            "$SMTP_PORT" \
            "$SMTP_USERNAME" \
            "$SMTP_PASSWORD" \
            "${{ env.EMAILS }}" \
            "${{ env.TAG }}" \
            "${{ env.BRANCH_NAME }}" \
            "${{ env.COMMIT_TITLE }}" \
            "${{ env.COMMIT_MESSAGE }}" \
            "${{ env.COMMIT_AUTHOR }}"

      - name: Send build failure email notification
        if: failure()
        env:
          SMTP_SERVER: semicolon.africa
          SMTP_PORT: 465
          SMTP_USERNAME: builds@semicolon.africa
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          SONARQUBE_URL: ${{ needs.build_and_analyze.outputs.sonarqube_url }}
          MAVEN_REPORT_URL: ${{ needs.deploy.outputs.maven_report_url }}
          AUTOMATION_TEST_URL: ${{ needs.run_tests.outputs.automation_test_url }}
        run: |
          chmod +x .github/workflows/scripts/send_failure_email.sh
          .github/workflows/scripts/send_failure_email.sh \
            "$SONARQUBE_URL" \
            "$AUTOMATION_TEST_URL" \
            "$MAVEN_REPORT_URL" \
            "$SMTP_SERVER" \
            "$SMTP_PORT" \
            "$SMTP_USERNAME" \
            "$SMTP_PASSWORD" \
            "${{ env.EMAILS }}" \
            "${{ env.TAG }}" \
            "${{ env.BRANCH_NAME }}" \
            "${{ env.COMMIT_TITLE }}" \
            "${{ env.COMMIT_MESSAGE }}" \
            "${{ env.COMMIT_AUTHOR }}"
